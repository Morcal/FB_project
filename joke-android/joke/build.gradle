apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile('com.feibo:fbcore:1.1.3') {
        exclude module: 'support-v4', group: 'com.android.support'
        exclude module: 'support-annotations', group: 'com.android.support'
        exclude module: 'gson', group: 'com.google.code.gson'
    }
    compile('com.feibo:social-component:1.0.5') {
        exclude module: 'support-v4', group: 'com.android.support'
        exclude module: 'support-annotations', group: 'com.android.support'
        exclude module: 'gson', group: 'com.google.code.gson'
    }
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'com.pnikosis:materialish-progress:1.7'
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        applicationId "com.feibo.joke"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 45
        versionName "4.0.3"
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "feibo"] //默认渠道号
    }

    signingConfigs {
        debug {
            storeFile file(KEYSTORE)
            storePassword STORE_PASSWORD
            keyAlias KEYALIAS
            keyPassword KEY_PASSWORD
        }
        myConfig {
            storeFile file(KEYSTORE)
            storePassword STORE_PASSWORD
            keyAlias KEYALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled proguardOn()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.myConfig
        }
    }

    lintOptions{
        abortOnError false
    }

//    flavors()
}

def flavors() { // 多渠道打包
    if (market_channels.trim().length() == 0) {
        return
    }

    String[] channels = market_channels.split(",")

    if (channels == null || channels.length == 0) {
        return
    }

//    List<String> channels_no = new ArrayList<String>();
//
//    int start = 100100;
//    for (int i = 0; i < 30; i++) {
//        channels_no.add("fb" + (start + i));
//    }
//    String[] channels = channels_no.toArray(new String[0]);
    channels.each {
        channel ->
            android.productFlavors.create(channel, {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
            })
    }
}

def proguardOn() {
    return "true".equals(proguard_on)
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
}
